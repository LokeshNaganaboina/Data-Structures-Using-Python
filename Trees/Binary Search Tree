'''
Question : 
Given a Binary Search Tree (with all values unique) and two node values n1 and n2 (n1!=n2). Find the Lowest Common Ancestors of the two nodes in the BST.
'''

#Function to find the lowest common ancestor in a BST. 
def LCA(root, n1, n2):
    #code here.
    if root is None:
        return None
        
    current = root
    while current:
        #LCA in right subtree
        if n1 > current.data and n2 > current.data:
            current = current.right
        #LCA in left subtree
        elif n1 < current.data and n2 < current.data:
            current = current.left
        #LCA is the root node itself
        else:
            return current

'''
Sample Test case:
Example 1:

Input:
              5
            /   \
          4      6
         /        \
        3          7
                    \
                     8
n1 = 7, n2 = 8
Output: 7
'''
